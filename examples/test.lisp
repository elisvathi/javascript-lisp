(require examples/stdlib.lisp)
;; (require examples/native.lisp)
;; (require examples/http.lisp)

(defvar lst (list 3 8 2 1))
(msort lst)
;; ;; (msort lst)
;; (lst)
;; (let (a 1) (b 2) (list a a a b))
;; (list a b)
;; ;; (defun lll (a) (let
;; ;;                  (x (* a 2))
;; ;;                  (y (* x 2))
;; ;;                  (list x x x y)))
;; ;; (lll 3)
;; (defun gtz (a) (> a 1))
;; (defun addone (a) (+ a 1))
;; (defvar lst (list 1 2 1 8 1 9 1 10 3 4))
;; ;; (map addone lst)
;; ;; (addone (car lst))
;; ;; (car lst)
;; ;; (filter gtz lst)
;; (mod 4 2)
(defun iseven (a) (eq (mod a 2) 0))
(defun isodd (a) (eq (mod a 2) 1))
(filter iseven lst)
(defun gtwo (a) (if (< a 2) 't '()))
(map gtwo lst)
;; (gtwo 1)
